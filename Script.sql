Create Database SkinCareApp;
GO

USE SkinCareApp;
GO

CREATE TABLE Users (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Email NVARCHAR(255) NOT NULL UNIQUE,
    Password NVARCHAR(255) NULL,
    Name NVARCHAR(255) NOT NULL,
    Role NVARCHAR(50) CHECK (Role IN ('User', 'Manager', 'Admin')) NOT NULL,
    IsActive BIT DEFAULT 1,
    ProfilePicture NVARCHAR(MAX),  
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE TempUsers (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Email NVARCHAR(255) NOT NULL UNIQUE,
    Password NVARCHAR(255) NOT NULL,
	Name NVARCHAR(255) NOT NULL DEFAULT N'',
    Role NVARCHAR(50) NOT NULL DEFAULT 'User';
    OTP NVARCHAR(6) NOT NULL,
    OTPExpiration DATETIME NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE VIP_Packages (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(255) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    Description NVARCHAR(500),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE User_VIP (
    UserId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(Id),
    VIPPackageId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES VIP_Packages(Id),
    PurchaseDate DATETIME DEFAULT GETDATE(),
    ExpirationDate DATETIME,
    PRIMARY KEY (UserId, VIPPackageId)
);


CREATE TABLE Payment_Logs (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(Id),
    VIPPackageId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES VIP_Packages(Id),
    TransactionId NVARCHAR(255) NOT NULL,
    PaymentStatus NVARCHAR(50) CHECK (PaymentStatus IN ('Pending', 'Completed', 'Failed', 'Refunded')) NOT NULL,
    PaymentAmount DECIMAL(10, 2) NOT NULL,
    PaymentDate DATETIME DEFAULT GETDATE(),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE AI_Analysis_Logs (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(Id),
    AnalysisResult NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Daily_Routine (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(Id),
    RoutineDetails NVARCHAR(MAX),
    SuggestedProducts NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Blogs (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Title NVARCHAR(255) NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    ExternalProductLink NVARCHAR(255),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Blog_Comments (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    BlogId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Blogs(Id),
    UserId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(Id),
    CommentText NVARCHAR(MAX) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Suggested_Products (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(500),
    Price DECIMAL(10, 2),
    ProductLink NVARCHAR(255),
    ImageLink NVARCHAR(255),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Daily_Routine_Products (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    DailyRoutineId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Daily_Routine(Id),
    ProductId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Suggested_Products(Id),
    CreatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE AI_Analysis_Products (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    AIAnalysisId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES AI_Analysis_Logs(Id),
    ProductId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Suggested_Products(Id),
    CreatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Product_Categories (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(255) NOT NULL,
    Description NVARCHAR(500),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE()
);


CREATE TABLE Product_Category_Mappings (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ProductId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Suggested_Products(Id),
    CategoryId UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Product_Categories(Id),
    CreatedAt DATETIME DEFAULT GETDATE()
);
